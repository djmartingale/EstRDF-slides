[["index.html", "Topology Inference for Radial Distribution Feeder based on Power Flow 1 Introduction", " Topology Inference for Radial Distribution Feeder based on Power Flow Jie Xu (s181238) 2020-12-14 1 Introduction This website hosts slides for defence of my master graduation project in the Department of Electrical Engineering at Technical University of Denmark. How households are connected to distribution network is always unknown. A framework to infer such connections by utilising all kinds of information is proposed in this project. Problem Setting How households are connected to distribution network is usually unknown. Available information for topology inference: There are three kinds of available information in this project. geographical information about buses voltage magnitudes of all the phases of all the buses some real power injection profiles For example, where they are located and barriers between them. There is no literature mentioning how to handle geographical information. Association network inference: In the literature, a technique called association network inference is usually used. Correlation between entities are derived based on some entity attributes. The face that number of edges in a mathematical tree is always 1 less than number of entities makes the problem simpler. Correlation between entities. \\(|\\mathcal{E}| = |\\mathcal{N}| - 1\\) However, there are two reasons why such technique cannot be used here. Spurious correlation resulted from correlated profiles. Missing entity attribute. The second reason will be discussed in detail later. Flowchart There are three columns. In the left column, ground truth, the true topology, is known, and used to simulate available measurement using power flow program. Three boxes in the middle represents three kinds of information disucssed before. Note that ground truth is not known and we want to find it. Programs in the right column are used to make inference about the topology. Ground truth is not known, but used to simulate available measurement. Two batches of computer programs: power flow three algorithms to handle directed graphs The second batch will not be discussed in detail. "],["radial-distribution-feeder.html", "2 Radial Distribution Feeder", " 2 Radial Distribution Feeder Essential concepts are discussed in following three parts. bus and edge, -&gt; 2.1 two special concepts for power flow, -&gt; 2.2 case with 70 buses, -&gt; 2.3 "],["bus-edge.html", "2.1 Bus and Edge", " 2.1 Bus and Edge Power grids can be roughly described here by following three concepts. type definition examples edge transport power from one place to another cable, transformer, capacitor conversion element convert power from or to another form solar panel, battery bus where two edges joint or end of an edge slack bus, PQ bus, PV bus Only one type of edge, cable, is considered. The method applies when there are transformers, capacitors, and other devices. Usually, there is one slack bus in distribution network and is referred to as root here. Ignore conversion elements. Not necessary in power flow calculation. Cable. One slack bus -&gt; root. "],["concepts.html", "2.2 Two Special Concepts", " 2.2 Two Special Concepts Essential for power flow calculation. Such two concepts cannot be found in the literature, but are essential for power flow when taking multiple phases into account. Channel channel: refer to one phase in some bus active channel: there are non-zero injections (connected to some conversion element) observed active channel: such non-zero injections are known It is assumed that all inactive channels are observed. That is, it is known that there is no power injection at those channels. Snapshot Snapshot: include power injections and voltages at one time index duration: 1 s Zero‐load snapshot : when power injections at all the channels are zero Such two symbols will be used later. \\(\\boldsymbol{\\bar{V}}_\\text{zero}\\): voltages in zero‐load snapshot \\(V_\\text{rate}\\): rated voltage magnitude, 230 V "],["case.html", "2.3 Case with 70 Buses", " 2.3 Case with 70 Buses To make the project manageable: Assumptions about feeders: spanning arborescence (SA) one step-down transformer rated voltage, 230 V three-phase four-wire cable one phase star connection A case with 70 buses is primarily used here: located in Belgium bus 1 is omitted 70 buses 207 channels "],["problem-formulation.html", "3 Problem Formulation", " 3 Problem Formulation information in a directed graph -&gt; 3.1 integer programming formulation -&gt; 3.3 local search heuristic algorithm -&gt; 3.4 There is an issue here that I will discuss after a summary in the end. remove overlapping edge -&gt; 3.2 "],["directed.html", "3.1 Directed Graph", " 3.1 Directed Graph All the information can be stored in a complete directed graph. complete (directed) graph for a set of buses All edges are potential edges, and they must have weights. In association network inference, it is impossible when some entity attributes are missing. all edges are potential edges select a set of edges -&gt; SA -&gt; candidate impossible potential edge 2-D Euclidean distance as weight feasible region All the candidates (SAs). Number of SA is finite, making it a combinatorial optimisation problem. Count number of SA. "],["overlapping.html", "3.2 Remove Overlapping Edge", " 3.2 Remove Overlapping Edge A potential edge can overlap some bus on its way from source to target. For example, in case-70: \\[ \\begin{array}{lllll} \\hline \\textbf{shortest path} &amp; &lt; &amp; \\textbf{direct edge} &amp; \\times \\textbf{threshold} &amp; \\text{-&gt; } \\textbf{remove direct edge} \\\\ \\hline \\text{&quot;b17‐b43-b29&quot;} &amp; &lt; &amp; \\text{&quot;b17-b29&quot;} &amp; \\times 1.1 &amp; \\text{-&gt; remove &quot;b17-b29&quot;} \\\\ \\text{&quot;b44‐b43-b29&quot;} &amp; &gt; &amp; \\text{&quot;b44-b29&quot;} &amp; \\times 1.1 &amp; \\text{-&gt; keep &quot;b44-b29&quot;} \\\\ \\hline \\end{array} \\] However: After all overlapping edges are removed (or saying detected as impoosible to exist), there are still 446 possible potential edges and over \\(10^{45}\\) SAs. This is the only technique used in this project. When more information is available, more advanced techniques can be applied. 446 possible potential edges over \\(10^{45}\\) SAs -&gt; summary "],["IP.html", "3.3 Integer Programming", " 3.3 Integer Programming Sets: \\[ \\begin{array}{ll} \\hline \\textbf{symbol} &amp; \\textbf{definition} \\\\ \\hline \\mathcal{E} &amp; \\text{all the potential edges} \\\\ \\mathcal{C} &amp; \\text{available measurements} \\\\ \\mathcal{E}_\\text{impossible} &amp; \\text{impossible potential edges} \\\\ \\hline \\end{array} \\] Variables: \\[ \\begin{array}{llll} \\hline \\textbf{symbol} &amp; \\textbf{definition} &amp; \\textbf{type} &amp; \\textbf{set} \\\\ \\hline x_{i j} &amp; \\text{whether to choose edge from i to j} &amp; \\text{binary} &amp; \\mathcal{E} \\\\ \\hline \\end{array} \\] Constants: \\[ \\begin{array}{lll} \\hline \\textbf{symbol} &amp; \\textbf{definition} &amp; \\textbf{set} \\\\ \\hline d_{i, j} &amp; \\text{Euclidean distance} &amp; \\mathcal{E} \\\\ \\hline \\end{array} \\] \\[ \\begin{aligned} \\min_{x_{i j} \\forall (i, j) \\in \\mathcal{E}} \\quad &amp; (1 - \\alpha) \\sum_{(i, j) \\in \\mathcal{E}} d_{i j} x_{i j} + \\alpha \\mathcal{H} \\left(\\{x_{i j} \\forall (i, j) \\in \\mathcal{E} \\}, \\mathcal{C} \\right) \\\\ \\text{s.t.} \\quad &amp; \\sum_{(i, j) \\in \\delta^{-}(j)} x_{i j} = 1 \\quad \\forall j \\in V^{\\prime} \\quad \\text{(a directed forest)} \\\\ &amp; \\sum_{(i, j) \\in \\delta^{-}(S)} x_{i j} \\geq 1 \\quad \\forall S \\subseteq V^{\\prime},|S| \\geq 2 \\quad \\text{(a connected graph)} \\\\ &amp; x_{i j} = 0 \\quad \\forall (i, j) \\in \\mathcal{E}_\\text{impossible} \\quad \\text{(remove impossible potential edges)} \\end{aligned} \\] Two terms in the objective function: \\[ \\begin{array}{lll} \\hline \\textbf{term} &amp; \\textbf{definition} &amp; \\textbf{coefficient} \\\\ \\hline (1 - \\alpha) \\sum_{(i, j) \\in \\mathcal{E}} d_{i j} x_{i j} &amp; \\text{total weight of candidate} &amp; 1 - \\alpha \\\\ \\alpha \\mathcal{H} \\left(\\{x_{i j} \\forall (i, j) \\in \\mathcal{E} \\}, \\mathcal{C} \\right) &amp; \\text{assessment of candidate} &amp; \\alpha \\\\ \\hline \\end{array} \\] Three sets of constraints: First two sets ensure arborescence. (Fischetti and Vigo 1997) Last set removes impossible potential edges. References "],["combinatorial.html", "3.4 Local Search", " 3.4 Local Search At least two possible values for \\(\\alpha\\): \\[ \\begin{array}{llll} \\hline \\textbf{value} &amp; \\textbf{term lefted} &amp; \\textbf{to find} &amp; \\textbf{disadvantage} \\\\ \\hline 1 &amp; \\mathcal{H} \\left(\\{x_{i j} \\forall (i, j) \\in \\mathcal{E} \\}, \\mathcal{C} \\right) &amp; \\text{ground truth} &amp; \\text{NP-hard and non-linear} \\\\ 0 &amp; \\sum_{(i, j) \\in \\mathcal{E}} d_{i j} x_{i j} &amp; \\text{topology with min total cable length} &amp; \\text{cannot find ground truth} \\\\ \\hline \\end{array} \\] Such two situations can be visualised: For this combinatorial optimisation problem, a local search heuristic algorithm is proposed to to move from \\(\\bigotimes\\) to \\(\\bigoplus\\). (Michiels, Aarts, and Korst 2007) All the algorithms in this category have two parts, an objective funciton to assess candidates and an neighbourhood function to generate candidates systematically. Here, pseudo linearised power flow will be used as the objective function and resulted mean squared error is to be minimised. It will be discussed later. An algorithm to rank spanning arborescences according to their total cable lengths is implemented. function what it does in this project objective assess candidate pseudo linearised power flow neighbourhood generate candidate rank spanning arborescence Because power grids are to be built with less cost, the total cable length of ground truth should not be too long, so we can find it before long, Ground truth should be found before long. Not in parallel. References "],["ac-power-flow.html", "4 AC Power Flow", " 4 AC Power Flow two essential matrices -&gt; 4.1 bus impedance matrix -&gt; 4.2 direct impedance method for power flow calculation -&gt; 4.2 Can be generalised for multi-phase model. (Hsieh, Chen, and Yang 2017) References "],["matrices.html", "4.1 Two Matrices", " 4.1 Two Matrices Current injection to flow: \\[ \\bar{\\boldsymbol{I}}_{\\text{edge}} = - \\boldsymbol{K} \\bar{\\boldsymbol{I}} \\] where edge path incidence matrix (EPI), \\(\\boldsymbol{K}\\). Voltage drop to nodal voltage: \\[ \\bar{\\boldsymbol{V}} = \\bar{\\boldsymbol{V}}_{\\text{zero}} - \\boldsymbol{K}^{\\top} \\boldsymbol{\\bar{Z}}_\\text{edge} \\bar{\\boldsymbol{I}}_{\\text{edge}} \\] where edge impedance diagonal block matrix (EIDB), \\(\\boldsymbol{\\bar{Z}}_\\text{edge}\\). Each row indicates whether power injection from some bus will pass the edge. \\[ \\begin{aligned} \\left[\\begin{array}{l} \\bar{I}_{\\text{edge}, 1} \\\\ \\bar{I}_{\\text{edge}, 2} \\\\ \\bar{I}_{\\text{edge}, 3} \\\\ \\bar{I}_{\\text{edge}, 4} \\\\ \\bar{I}_{\\text{edge}, 5} \\end{array}\\right] = - \\left[\\begin{array}{lllll} 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 0 &amp; 1 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\left[\\begin{array}{l} \\bar{I}_{1} \\\\ \\bar{I}_{2} \\\\ \\bar{I}_{3} \\\\ \\bar{I}_{4} \\\\ \\bar{I}_{5} \\end{array}\\right] \\end{aligned} \\] \\[ \\begin{aligned} &amp; \\left[\\begin{array}{c} \\bar{V}_{1} \\\\ \\bar{V}_{2} \\\\ \\bar{V}_{3} \\\\ \\bar{V}_{4} \\\\ \\bar{V}_{5} \\end{array}\\right] - \\left[\\begin{array}{c} \\bar{V}_\\text{rate} \\\\ \\bar{V}_\\text{rate} \\\\ \\bar{V}_\\text{rate} \\\\ \\bar{V}_\\text{rate} \\\\ \\bar{V}_\\text{rate} \\end{array}\\right] = - \\left[\\begin{array}{ccccc} 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 0 &amp; 1 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\end{array} \\right]^{\\top} \\left[\\begin{array}{ccccc} Z_{\\text{edge}, 1} &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; Z_{\\text{edge}, 2} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; Z_{\\text{edge}, 3} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; Z_{\\text{edge}, 4} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; Z_{\\text{edge}, 5} \\end{array}\\right] \\left[\\begin{array}{l} \\bar{I}_{\\text{edge}, 1} \\\\ \\bar{I}_{\\text{edge}, 2} \\\\ \\bar{I}_{\\text{edge}, 3} \\\\ \\bar{I}_{\\text{edge}, 4} \\\\ \\bar{I}_{\\text{edge}, 5} \\end{array} \\right] \\end{aligned} \\] Alternating current power flow: (Conti, Greco, and Raiti 2006) \\[ \\bar{\\boldsymbol{V}} = \\bar{\\boldsymbol{V}}_{\\text{zero}} + \\left( \\boldsymbol{K}^{\\top} \\boldsymbol{\\bar{Z}}_\\text{edge} \\boldsymbol{K} \\right) \\bar{\\boldsymbol{I}} \\] References "],["BIM.html", "4.2 Bus Impedance Matrix", " 4.2 Bus Impedance Matrix Alternating current power flow: \\[ \\bar{\\boldsymbol{V}} = \\bar{\\boldsymbol{V}}_{\\text{zero}} + \\left( \\boldsymbol{K}^{\\top} \\boldsymbol{\\bar{Z}}_\\text{edge} \\boldsymbol{K} \\right) \\bar{\\boldsymbol{I}} \\] Bus impedance matrix (BIM), \\(\\boldsymbol{\\bar{Z}}\\), is defined as: \\[ \\begin{aligned} \\boldsymbol{\\bar{Z}} &amp;= \\boldsymbol{K}^{\\top} \\boldsymbol{\\bar{Z}}_\\text{edge} \\boldsymbol{K} \\\\ &amp;= \\boldsymbol{R} + j \\boldsymbol{X} \\end{aligned} \\] where bus resistance matrix (BRM), \\(\\boldsymbol{R}\\): real part of entries in BIM. "],["power-flow.html", "4.3 Direct Impedance Method", " 4.3 Direct Impedance Method Build BIM directly and calculate power flow. (Schneider et al. 2017) Five steps to build BIM: Define a unit impedance matrix. Calculate edge impedance matrices for cables. Build EIDB. Obtain EPI based on topology. Calculate BIM using EIDB and EPI. Fixed Point Method The following procedure is repeated: \\[ \\begin{aligned} \\boldsymbol{\\bar{I}} &amp;= \\boldsymbol{\\underline{P}} \\otimes \\boldsymbol{\\underline{V}}_\\text{previous} \\\\ \\boldsymbol{\\bar{V}} &amp;= \\boldsymbol{\\bar{Z}} \\boldsymbol{\\bar{I}} + \\boldsymbol{\\bar{V}}_\\text{zero} \\\\ \\epsilon &amp;= \\left( \\boldsymbol{\\bar{V}} - \\boldsymbol{\\bar{V}} \\right)^\\top \\left( \\boldsymbol{\\bar{V}} - \\boldsymbol{\\bar{V}} \\right) \\end{aligned} \\] until \\(\\epsilon\\) is smaller than a pre-defined threshold. References "],["linearised-power-flow.html", "5 Linearised Power Flow", " 5 Linearised Power Flow Two steps: linearise voltage drop -&gt; 5.1 ignore power loss -&gt; 5.2 Then: assessment of candidate -&gt; 5.5 Besides, there are three parts that I will discussed in detail after the summary. bus resistance matrix -&gt; 5.3 inversed bus resistance matrix -&gt; 5.4 error from linearisation -&gt; 5.6 "],["linearVoltageDrop.html", "5.1 Linearised Voltage Drop", " 5.1 Linearised Voltage Drop With power flow at source of edge \\(k\\), \\(\\bar{S}_{\\text{source}, k}\\), voltage drop: \\[ \\begin{aligned} \\bar{V}_{\\text{edge}, k} &amp;= \\bar{I}_{\\text{edge}, k} \\bar{Z}_{\\text{edge}, k} \\\\ &amp;= \\frac{ \\underline{S}_{\\text{source}, k} \\bar{Z}_{\\text{edge}, k} }{\\underline{V}_i} \\\\ &amp;= \\frac{ \\left(P_{\\text{source}, k} - j Q_{\\text{source}, k} \\right) \\left(R_{\\text{edge}, k} + j X_{\\text{edge}, k} \\right) }{\\underline{V}_i} \\\\ &amp;= \\frac{ R_{\\text{edge}, k} P_{\\text{source}, k} + X_{\\text{edge}, k} Q_{\\text{source}, k} }{\\underline{V}_i} + j \\frac{ X_{\\text{edge}, k} P_{\\text{source}, k} - R_{\\text{edge}, k} Q_{\\text{source}, k} }{\\underline{V}_i} \\end{aligned} \\] Then: (Conti, Greco, and Raiti 2006) \\[ V_{\\text{edge}, k} = \\frac{R_{\\text{edge}, k}}{V_\\text{rate}} P_{\\text{source}, k} \\] Ignore imaginary part. Use \\(V_\\text{rate}\\). References "],["linearVoltage.html", "5.2 Linearised Voltage", " 5.2 Linearised Voltage Similar to AC power flow: Power injection to flow: \\[ \\boldsymbol{P}_\\text{source} = - \\boldsymbol{K} \\left(\\boldsymbol{P} - \\boldsymbol{P}_\\text{loss} \\right) \\] Voltage drop to nodal voltage: \\[ \\boldsymbol{V} = \\boldsymbol{V}_\\text{zero} - \\frac{1}{V_\\text{rate}} \\boldsymbol{K}^{\\top} \\boldsymbol{R}_\\text{edge} \\boldsymbol{P}_\\text{source} \\] Voltage magnitudes can be calculated using BRM and real power injections: \\[ \\begin{aligned} \\boldsymbol{V} &amp;= \\boldsymbol{V}_\\text{zero} + \\frac{1}{V_\\text{rate}} \\left( \\boldsymbol{K}^{\\top} \\boldsymbol{R}_\\text{edge} \\boldsymbol{K} \\right) \\boldsymbol{P} \\\\ {} &amp;= \\boldsymbol{V}_\\text{zero} + \\frac{1}{V_\\text{rate}} \\boldsymbol{R} \\boldsymbol{P} \\end{aligned} \\] To assess candidate by calculating power injections using voltage magnitudes. "],["BRM.html", "5.3 Bus Resistance Matrix", " 5.3 Bus Resistance Matrix BRM of case-70: Bus 2 -&gt; root 69 PQ buses 207 channels 207 rows and 207 columns There is some pattern that can be explained by the analytical expression. Lowest Common Ancestor Problem Entry \\((i, j)\\) -&gt; sum of edge resistances in their common path to root: \\[ R_{i, j}=\\sum_{k \\in U_{i} \\cap U_{j}} R_{\\text {edge }, k} \\] where \\(U_{i}\\) is set of edges on the path from root to bus \\(i\\). Entry \\((i, j)\\) is the sum of edge resistances in the path from root to their lowest common ancestor (LCA) of bus \\(i\\) and \\(j\\). Calcualted efficiently using LCA for all pairs. Useful pattern. BRM can be calcualted efficiently using LCA for all pairs of buses. and the pattern can be used in future work. For example, \\[ \\begin{array}{ll} \\hline \\text{pair of buses} &amp; \\text{entry in BRM} \\\\ \\hline \\text{b3-b5} &amp; R_\\text{e1} + R_\\text{e2} \\\\ \\text{b4-b5} &amp; R_\\text{e1} + R_\\text{e2} \\\\ \\hline \\end{array} \\] -&gt; summary "],["brmInv.html", "5.4 Pseudo Linearised Power Flow", " 5.4 Pseudo Linearised Power Flow Based on linearised power flow, \\(\\boldsymbol{V} = \\boldsymbol{V}_\\text{zero} + \\frac{1}{V_\\text{rate}} \\boldsymbol{R} \\boldsymbol{P}\\): \\[ \\begin{aligned} \\boldsymbol{P}_\\text{assess} = V_\\text{rate} \\boldsymbol{R}^{\\top} \\left( \\boldsymbol{V} - \\boldsymbol{V}_\\text{zero} \\right) \\end{aligned} \\] -&gt; pseudo linearised power flow. which is referred to as pseudo linearised power flow. Inversed BRM for case-70: Inversed BRM for the case looks like: Sparse. Full rank. Voltage magnitude at any channel can have a huge impact. Useful pattern. "],["assessment.html", "5.5 Assessment of Candidate", " 5.5 Assessment of Candidate Calculate \\(\\boldsymbol{P}_\\text{assess}\\) using voltage magnitudes. Compare \\(\\boldsymbol{P}_\\text{assess}\\) with available power measurements. Mean squared error (MSE): \\[ \\begin{aligned} \\mathcal{H}(\\boldsymbol{R}) = \\left[ (\\boldsymbol{P}_\\text{assess} - \\boldsymbol{P}) \\otimes \\boldsymbol{O} \\right]^\\top \\cdot \\left[ (\\boldsymbol{P}_\\text{assess} - \\boldsymbol{P}) \\otimes \\boldsymbol{O} \\right] / |\\mathcal{O}| \\end{aligned} \\] where: \\(\\mathcal{O}\\): set of observed active channels and inactive channels. \\(\\boldsymbol{O}\\): binary vector indicating observed active channels. It is the second term in the objective function. Entries for unobserved active channels are ignored. "],["error.html", "5.6 Error from Linearisation", " 5.6 Error from Linearisation Box plot: with respect to different number of observed active channels based on ground truth and 50 snapshots1 Error is aleady reduced to 1.7 ~ 2.2. Rated voltage magnitudes will increase the error dramatically. Rated voltage magnitudes will increase the error dramatically, so full observability of voltage magnitudes are still required for now. -&gt; summary during 00:00:00 and 00:00:50 on Dec 2, 2020 from Sonnen data set.↩︎ "],["result-and-summary.html", "6 Result and Summary", " 6 Result and Summary result for case-70 -&gt; 6.1 summary -&gt; 6.2 "],["result.html", "6.1 Result for Case-70", " 6.1 Result for Case-70 Here we only show how result might look like. Because there are only 75 new possible potential edges here. There is an issue that will be discussed later. three new pairs, “b29‐b44”, “b68‐b14”, and “b68‐b15” 144 edges in total 288 SAs rooted at “b2” Rank candidates according to total cable lengths: It increases all the time. Assessment based on 50 snapshots2: The red cross point, with minimum mean squared error, is ground truth. during 00:00:00 and 00:00:50 on Dec 2, 2020 from Sonnen data set.↩︎ "],["summary.html", "6.2 Summary", " 6.2 Summary The project is summarised here. We turn topology inference into a combinatorial optimisation problem. A new framework is proposed, and its core is a local search heuristic algorithm. Topology inference -&gt; combinatorial optimisation problem. A new framework is proposed. Core: local search heuristic algorithm. Four steps: Shrink feasible region (reduce number of SAs). Measure the size of feasible region by counting number of SAs. Get candidates sequentially by ranking SAs according to total cable lengths. Assess candidates based on available measurements. Advantages: There are two advantages. It is robust to partial observability over power injections, and is capable to integrate all kinds of information in weights and directions. Robust to partial observability. Integrate all kinds of information in weights and directions. Issues There are three issues that I want to discuss in detail here. Firstly, there are too many SAs, so we have to reduce the number, for example, by removing overlapping edges. Too many SAs. (remove overlapping edges) Full observability over voltage magnitudes. (matrices with full rank) Error in linearised power flow calculation. (error from linearisation) Future Work How to detect more impossible potential edges. (for issue 1) How to assess candidates based on a fraction. (for issue 2) How to use voltage sensitivity matrix in linearised power flow. (for issue 3) "],["references.html", "References", " References Conti, S, AM Greco, and S Raiti. 2006. “Voltage Sensitivity Analysis in Mv Distribution Networks.” In Proceedings of the 6th Wseas/Iasme International Conference on Electric Power Systems, High Voltages, Electric Machines, Tenerife, Spain, 16–18. Fischetti, Matteo, and Daniele Vigo. 1997. “A Branch-and-Cut Algorithm for the Resource-Constrained Minimum-Weight Arborescence Problem.” Networks: An International Journal 29 (1): 55–67. Hsieh, Ting-Yen, Tsai-Hsiang Chen, and Nien-Che Yang. 2017. “Matrix Decompositions-Based Approach to Z-Bus Matrix Building Process for Radial Distribution Systems.” International Journal of Electrical Power &amp; Energy Systems 89: 62–68. Michiels, Wil, Emile Aarts, and Jan Korst. 2007. Theoretical Aspects of Local Search. Springer Science &amp; Business Media. Schneider, Kevin P, BA Mather, BC Pal, C-W Ten, Greg J Shirek, Hao Zhu, Jason C Fuller, et al. 2017. “Analytic Considerations and Design Basis for the Ieee Distribution Test Feeders.” IEEE Transactions on Power Systems 33 (3): 3181–8. "]]
