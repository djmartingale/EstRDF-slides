[["index.html", "Topology Inference for Radial Distribution Feeder based on Power Flow 1 Introduction", " Topology Inference for Radial Distribution Feeder based on Power Flow Jie Xu (s181238) 2020-12-15 1 Introduction Problem Setting Available information for topology inference: geographical information about buses voltage magnitudes of all the phases of all the buses some real power injection profiles Association network inference: correlation between buses Spurious correlation resulted from correlated profiles. Missing measurement. Flowchart Ground truth is to be found in topolgoy inference, but used to simulate available measurement first. Two batches of computer programs: power flow three algorithms to handle directed graphs "],["radial-distribution-feeder.html", "2 Radial Distribution Feeder", " 2 Radial Distribution Feeder bus and edge, -&gt; 2.1 two special concepts for power flow, -&gt; 2.2 case with 70 buses, -&gt; 2.3 "],["bus-edge.html", "2.1 Bus and Edge", " 2.1 Bus and Edge type definition examples edge transport power from one place to another cable, transformer, capacitor conversion element convert power from or to another form solar panel, battery bus where two edges joint or end of an edge slack bus, PQ bus, PV bus Cable. One slack bus -&gt; root. Ignore conversion elements. Not necessary in power flow calculation. "],["concepts.html", "2.2 Two Special Concepts", " 2.2 Two Special Concepts Essential for power flow calculation. Channel channel: refer to one phase in some bus active channel: connect to household observed active channel: power is measured It is assumed that all inactive channels are observed. Snapshot Snapshot: include power injections and voltages at one time index duration: 1 s Zero‐load snapshot : when power injections at all the channels are zero \\(\\boldsymbol{\\bar{V}}_\\text{zero}\\): voltages in zero‐load snapshot \\(V_\\text{rate}\\): rated voltage magnitude, 230 V "],["case.html", "2.3 Case with 70 Buses", " 2.3 Case with 70 Buses Assumptions about feeders: spanning arborescence (SA) one step-down transformer rated voltage, 230 V three-phase four-wire cable one phase star connection A case with 70 buses is primarily used here: located in Belgium bus 1 is omitted 62 households -&gt; 62 active channels "],["problem-formulation.html", "3 Problem Formulation", " 3 Problem Formulation information in a directed graph -&gt; 3.1 integer programming formulation -&gt; 3.3 local search heuristic algorithm -&gt; 3.4 remove overlapping edge -&gt; 3.2 "],["directed.html", "3.1 Directed Graph", " 3.1 Directed Graph weighted complete (directed) graph for a set of buses any pair of buses -&gt; edge -&gt; potential edges to be selected select a set of edges -&gt; SA -&gt; candidate impossible potential edge 2-D Euclidean distance -&gt; cable length -&gt; weight feasible region All the candidates (SAs). Number of SAs is finite, making it a combinatorial optimisation problem. Count number of SAs. "],["overlapping.html", "3.2 Remove Overlapping Edge", " 3.2 Remove Overlapping Edge For example, in case-70: \\[ \\begin{array}{lllll} \\hline \\textbf{shortest path} &amp; &lt; &amp; \\textbf{direct edge} &amp; \\times \\textbf{threshold} &amp; \\text{-&gt; } \\textbf{remove direct edge} \\\\ \\hline \\text{&quot;b17‐b43-b29&quot;} &amp; &lt; &amp; \\text{&quot;b17-b29&quot;} &amp; \\times 1.1 &amp; \\text{-&gt; remove &quot;b17-b29&quot;} \\\\ \\text{&quot;b44‐b43-b29&quot;} &amp; &gt; &amp; \\text{&quot;b44-b29&quot;} &amp; \\times 1.1 &amp; \\text{-&gt; keep &quot;b44-b29&quot;} \\\\ \\hline \\end{array} \\] However: 446 possible potential edges over \\(10^{45}\\) SAs -&gt; summary "],["IP.html", "3.3 Integer Programming", " 3.3 Integer Programming Sets: \\[ \\begin{array}{ll} \\hline \\textbf{symbol} &amp; \\textbf{definition} \\\\ \\hline \\mathcal{E} &amp; \\text{all the potential edges} \\\\ \\mathcal{C} &amp; \\text{available snapshots} \\\\ \\mathcal{E}_\\text{impossible} &amp; \\text{impossible potential edges} \\\\ \\hline \\end{array} \\] Variables: \\[ \\begin{array}{llll} \\hline \\textbf{symbol} &amp; \\textbf{definition} &amp; \\textbf{type} &amp; \\textbf{set} \\\\ \\hline x_{i j} &amp; \\text{whether to choose edge from i to j} &amp; \\text{binary} &amp; \\mathcal{E} \\\\ \\hline \\end{array} \\] Constants: \\[ \\begin{array}{lll} \\hline \\textbf{symbol} &amp; \\textbf{definition} &amp; \\textbf{set} \\\\ \\hline d_{i, j} &amp; \\text{Euclidean distance} &amp; \\mathcal{E} \\\\ \\hline \\end{array} \\] \\[ \\begin{aligned} \\min_{x_{i j} \\forall (i, j) \\in \\mathcal{E}} \\quad &amp; (1 - \\alpha) \\sum_{(i, j) \\in \\mathcal{E}} d_{i j} x_{i j} + \\alpha \\mathcal{H} \\left(\\{x_{i j} \\forall (i, j) \\in \\mathcal{E} \\}, \\mathcal{C} \\right) \\\\ \\text{s.t.} \\quad &amp; \\sum_{(i, j) \\in \\delta^{-}(j)} x_{i j} = 1 \\quad \\forall j \\in V^{\\prime} \\quad \\text{(a directed forest)} \\\\ &amp; \\sum_{(i, j) \\in \\delta^{-}(S)} x_{i j} \\geq 1 \\quad \\forall S \\subseteq V^{\\prime},|S| \\geq 2 \\quad \\text{(a connected graph)} \\\\ &amp; x_{i j} = 0 \\quad \\forall (i, j) \\in \\mathcal{E}_\\text{impossible} \\quad \\text{(remove impossible potential edges)} \\end{aligned} \\] Two terms in the objective function: \\[ \\begin{array}{lll} \\hline \\textbf{term} &amp; \\textbf{definition} &amp; \\textbf{coefficient} \\\\ \\hline (1 - \\alpha) \\sum_{(i, j) \\in \\mathcal{E}} d_{i j} x_{i j} &amp; \\text{total cable length of candidate} &amp; 1 - \\alpha \\\\ \\alpha \\mathcal{H} \\left(\\{x_{i j} \\forall (i, j) \\in \\mathcal{E} \\}, \\mathcal{C} \\right) &amp; \\text{assessment of candidate} &amp; \\alpha \\\\ \\hline \\end{array} \\] Three sets of constraints: First two sets ensure SA. (Fischetti and Vigo 1997) Last set removes impossible potential edges. References "],["combinatorial.html", "3.4 Local Search", " 3.4 Local Search At least two possible values for \\(\\alpha\\): \\[ \\begin{array}{llll} \\hline \\textbf{value} &amp; \\textbf{term lefted} &amp; \\textbf{to find} &amp; \\textbf{disadvantage} \\\\ \\hline 1 &amp; \\mathcal{H} \\left(\\{x_{i j} \\forall (i, j) \\in \\mathcal{E} \\}, \\mathcal{C} \\right) &amp; \\text{ground truth} &amp; \\text{NP-hard and non-linear} \\\\ 0 &amp; \\sum_{(i, j) \\in \\mathcal{E}} d_{i j} x_{i j} &amp; \\text{topology with min total cable length} &amp; \\text{cannot find ground truth} \\\\ \\hline \\end{array} \\] Such two situations can be visualised: For this combinatorial optimisation problem, a local search heuristic algorithm is proposed to move from \\(\\bigotimes\\) to \\(\\bigoplus\\). (Michiels, Aarts, and Korst 2007) function what it does in this project objective assess candidate pseudo linearised power flow neighbourhood generate candidate rank spanning arborescence Ground truth should be found before long. Not in parallel. References "],["ac-power-flow.html", "4 AC Power Flow", " 4 AC Power Flow two essential matrices -&gt; 4.1 bus impedance matrix -&gt; 4.2 direct impedance method for power flow calculation -&gt; 4.2 Can be generalised for multi-phase model. (Hsieh, Chen, and Yang 2017) References "],["matrices.html", "4.1 Two Matrices", " 4.1 Two Matrices current injection -&gt; current flow: \\[ \\bar{\\boldsymbol{I}}_{\\text{edge}} = - \\boldsymbol{K} \\bar{\\boldsymbol{I}} \\] where edge path incidence matrix (EPI), \\(\\boldsymbol{K}\\). voltage drop -&gt; voltage: \\[ \\bar{\\boldsymbol{V}} = \\bar{\\boldsymbol{V}}_{\\text{zero}} - \\boldsymbol{K}^{\\top} \\boldsymbol{\\bar{Z}}_\\text{edge} \\bar{\\boldsymbol{I}}_{\\text{edge}} \\] where edge impedance diagonal block matrix (EIDB), \\(\\boldsymbol{\\bar{Z}}_\\text{edge}\\). \\[ \\begin{aligned} \\left[\\begin{array}{l} \\bar{I}_{\\text{edge}, 1} \\\\ \\bar{I}_{\\text{edge}, 2} \\\\ \\bar{I}_{\\text{edge}, 3} \\\\ \\bar{I}_{\\text{edge}, 4} \\\\ \\bar{I}_{\\text{edge}, 5} \\end{array}\\right] = - \\left[\\begin{array}{lllll} 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 0 &amp; 1 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\left[\\begin{array}{l} \\bar{I}_{1} \\\\ \\bar{I}_{2} \\\\ \\bar{I}_{3} \\\\ \\bar{I}_{4} \\\\ \\bar{I}_{5} \\end{array}\\right] \\end{aligned} \\] \\[ \\begin{aligned} &amp; \\left[\\begin{array}{c} \\bar{V}_{1} \\\\ \\bar{V}_{2} \\\\ \\bar{V}_{3} \\\\ \\bar{V}_{4} \\\\ \\bar{V}_{5} \\end{array}\\right] - \\left[\\begin{array}{c} \\bar{V}_\\text{rate} \\\\ \\bar{V}_\\text{rate} \\\\ \\bar{V}_\\text{rate} \\\\ \\bar{V}_\\text{rate} \\\\ \\bar{V}_\\text{rate} \\end{array}\\right] = - \\left[\\begin{array}{ccccc} 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 0 &amp; 1 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\end{array} \\right]^{\\top} \\left[\\begin{array}{ccccc} Z_{\\text{edge}, 1} &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; Z_{\\text{edge}, 2} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; Z_{\\text{edge}, 3} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; Z_{\\text{edge}, 4} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; Z_{\\text{edge}, 5} \\end{array}\\right] \\left[\\begin{array}{l} \\bar{I}_{\\text{edge}, 1} \\\\ \\bar{I}_{\\text{edge}, 2} \\\\ \\bar{I}_{\\text{edge}, 3} \\\\ \\bar{I}_{\\text{edge}, 4} \\\\ \\bar{I}_{\\text{edge}, 5} \\end{array} \\right] \\end{aligned} \\] Alternating current power flow: (Conti, Greco, and Raiti 2006) \\[ \\bar{\\boldsymbol{V}} = \\bar{\\boldsymbol{V}}_{\\text{zero}} + \\left( \\boldsymbol{K}^{\\top} \\boldsymbol{\\bar{Z}}_\\text{edge} \\boldsymbol{K} \\right) \\bar{\\boldsymbol{I}} \\] References "],["BIM.html", "4.2 Bus Impedance Matrix", " 4.2 Bus Impedance Matrix Alternating current power flow: \\[ \\bar{\\boldsymbol{V}} = \\bar{\\boldsymbol{V}}_{\\text{zero}} + \\left( \\boldsymbol{K}^{\\top} \\boldsymbol{\\bar{Z}}_\\text{edge} \\boldsymbol{K} \\right) \\bar{\\boldsymbol{I}} \\] Bus impedance matrix (BIM), \\(\\boldsymbol{\\bar{Z}}\\), is defined as: \\[ \\begin{aligned} \\boldsymbol{\\bar{Z}} &amp;= \\boldsymbol{K}^{\\top} \\boldsymbol{\\bar{Z}}_\\text{edge} \\boldsymbol{K} \\\\ &amp;= \\boldsymbol{R} + j \\boldsymbol{X} \\end{aligned} \\] where bus resistance matrix (BRM), \\(\\boldsymbol{R}\\): real part of entries in BIM. "],["power-flow.html", "4.3 Direct Impedance Method", " 4.3 Direct Impedance Method Five steps to build BIM: Define a unit impedance matrix. Calculate edge impedance matrices for cables. Build EIDB. Obtain EPI based on topology. Calculate BIM using EIDB and EPI. Fixed Point Method The following procedure is repeated: \\[ \\begin{aligned} \\boldsymbol{\\bar{I}} &amp;= \\boldsymbol{\\underline{P}} \\otimes \\boldsymbol{\\underline{V}}_\\text{previous} \\\\ \\boldsymbol{\\bar{V}} &amp;= \\boldsymbol{\\bar{Z}} \\boldsymbol{\\bar{I}} + \\boldsymbol{\\bar{V}}_\\text{zero} \\\\ \\epsilon &amp;= \\left( \\boldsymbol{\\bar{V}} - \\boldsymbol{\\bar{V}} \\right)^\\top \\left( \\boldsymbol{\\bar{V}} - \\boldsymbol{\\bar{V}} \\right) \\end{aligned} \\] until \\(\\epsilon\\) is smaller than a pre-defined threshold. "],["linearised-power-flow.html", "5 Linearised Power Flow", " 5 Linearised Power Flow assessment of candidate -&gt; 5.3 bus resistance matrix -&gt; 5.1 inversed bus resistance matrix -&gt; 5.2 error from linearisation -&gt; 5.4 "],["BRM.html", "5.1 Bus Resistance Matrix", " 5.1 Bus Resistance Matrix BRM of case-70: bus 2 -&gt; root 69 PQ buses 207 channels -&gt; 207 rows and 207 columns Lowest Common Ancestor Problem Entry \\((i, j)\\) -&gt; sum of edge resistances in the path from root to their lowest common ancestor (LCA): \\[ R_{i, j}=\\sum_{k \\in U_{i} \\cap U_{j}} R_{\\text {edge }, k} \\] where \\(U_{i}\\) is set of edges on the path from root to bus \\(i\\). Calcualted efficiently using LCA for all pairs. Useful pattern. For example, \\[ \\begin{array}{ll} \\hline \\text{pair of buses} &amp; \\text{entry in BRM} \\\\ \\hline \\text{b3-b5} &amp; R_\\text{e1} + R_\\text{e2} \\\\ \\text{b4-b5} &amp; R_\\text{e1} + R_\\text{e2} \\\\ \\hline \\end{array} \\] -&gt; summary "],["brmInv.html", "5.2 Pseudo Linearised Power Flow", " 5.2 Pseudo Linearised Power Flow Based on linearised power flow, \\(\\boldsymbol{V} = \\boldsymbol{V}_\\text{zero} + \\frac{1}{V_\\text{rate}} \\boldsymbol{R} \\boldsymbol{P}\\): \\[ \\begin{aligned} \\boldsymbol{P}_\\text{assess} = V_\\text{rate} \\boldsymbol{R}^{\\top} \\left( \\boldsymbol{V} - \\boldsymbol{V}_\\text{zero} \\right) \\end{aligned} \\] -&gt; pseudo linearised power flow. Inversed BRM for case-70: Sparse. Full rank. Voltage magnitude at any channel can have a huge impact. Useful pattern. -&gt; summary "],["assessment.html", "5.3 Assessment of Candidate", " 5.3 Assessment of Candidate Linearised power flow: \\[ \\begin{aligned} \\boldsymbol{V} &amp;= \\boldsymbol{V}_\\text{zero} + \\frac{1}{V_\\text{rate}} \\left( \\boldsymbol{K}^{\\top} \\boldsymbol{R}_\\text{edge} \\boldsymbol{K} \\right) \\boldsymbol{P} \\\\ {} &amp;= \\boldsymbol{V}_\\text{zero} + \\frac{1}{V_\\text{rate}} \\boldsymbol{R} \\boldsymbol{P} \\end{aligned} \\] Calculate \\(\\boldsymbol{P}_\\text{assess}\\) using voltage magnitudes. Compare with available power measurements. Mean squared error (MSE): \\[ \\begin{aligned} \\mathcal{H}(\\boldsymbol{R}) = \\left[ (\\boldsymbol{P}_\\text{assess} - \\boldsymbol{P}_\\text{measure}) \\otimes \\boldsymbol{O} \\right]^\\top \\cdot \\left[ (\\boldsymbol{P}_\\text{assess} - \\boldsymbol{P}_\\text{measure}) \\otimes \\boldsymbol{O} \\right] / |\\mathcal{O}| \\end{aligned} \\] where: \\(\\mathcal{O}\\): set of observed active channels and inactive channels. \\(\\boldsymbol{O}\\): binary vector indicating observed active channels. "],["error.html", "5.4 Error from Linearisation", " 5.4 Error from Linearisation Box plot: with respect to different number of observed active channels based on ground truth and 50 snapshots1 Number of observed active channels. Rated voltage magnitudes will increase the error dramatically. -&gt; summary during 00:00:00 and 00:00:50 on Dec 2, 2020 from Sonnen data set.↩︎ "],["result-and-summary.html", "6 Result and Summary", " 6 Result and Summary result for case-70 -&gt; 6.1 summary -&gt; 6.2 "],["result.html", "6.1 Result for Case-70", " 6.1 Result for Case-70 three new pairs, “b29‐b44”, “b68‐b14”, and “b68‐b15” 144 potential edges in total 288 SAs rooted at bus 2 full observability Rank candidates according to total cable lengths: Assessment based on 50 snapshots2: during 00:00:00 and 00:00:50 on Dec 2, 2020 from Sonnen data set.↩︎ "],["summary.html", "6.2 Summary", " 6.2 Summary Topology inference -&gt; combinatorial optimisation problem. A new framework is proposed. Core: local search heuristic algorithm. Four steps: Shrink feasible region (reduce number of SAs). Measure the size of feasible region. Get candidates sequentially according to total cable lengths. Assess candidates based on available measurements. Advantages: Robust to partial observability. Integrate all kinds of information in weights and directions. Issues Too many candidates. (remove overlapping edges) Full observability over voltage magnitudes. (matrices with full rank) Error in linearised power flow calculation. (error from linearisation) Future Work How to detect more impossible potential edges. (for issue 1) How to assess candidates based on a fraction. (for issue 2) How to use voltage sensitivity matrix in linearised power flow. (for issue 3) "],["references.html", "References", " References Conti, S, AM Greco, and S Raiti. 2006. “Voltage Sensitivity Analysis in Mv Distribution Networks.” In Proceedings of the 6th Wseas/Iasme International Conference on Electric Power Systems, High Voltages, Electric Machines, Tenerife, Spain, 16–18. Fischetti, Matteo, and Daniele Vigo. 1997. “A Branch-and-Cut Algorithm for the Resource-Constrained Minimum-Weight Arborescence Problem.” Networks: An International Journal 29 (1): 55–67. Hsieh, Ting-Yen, Tsai-Hsiang Chen, and Nien-Che Yang. 2017. “Matrix Decompositions-Based Approach to Z-Bus Matrix Building Process for Radial Distribution Systems.” International Journal of Electrical Power &amp; Energy Systems 89: 62–68. Michiels, Wil, Emile Aarts, and Jan Korst. 2007. Theoretical Aspects of Local Search. Springer Science &amp; Business Media. "]]
