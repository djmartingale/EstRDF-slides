[["index.html", "Topology Inference for Radial Distribution Feeder based on Power Flow 1 Introduction", " Topology Inference for Radial Distribution Feeder based on Power Flow Jie Xu (s181238) 2020-12-11 1 Introduction This website hosts slides for defence of my master graduation project in the Department of Electrical Engineering at Technical University of Denmark. How households are connected to distribution network is always unknown. A framework to infer such connections by utilising all kinds of information is proposed in this project. A simple flowchart for the project is: Available information and measurement: geographical information about buses voltage magnitudes of all the phases of all the buses some real power injection profiles Two batches of computer programs: alternating current power flow calculation its linearised version three algorithms to handle directed graphs "],["radial-distribution-feeder.html", "2 Radial Distribution Feeder ", " 2 Radial Distribution Feeder "],["bus-edge.html", "2.1 Bus and Edge", " 2.1 Bus and Edge There are roughly two types of electrical devices in power grids. type definition examples delivery element transport power from one place to another cable, transformer, capacitor conversion element convert power from or to another form solar panel, battery Ignore conversion elements. Not necessary in power flow calculation. Delivery element will be called edge. Another concept, bus, represent the place where two different delivery elements joint or end of a delivery element, but there is no physical entity corresponding to a bus. There are three common types of buses: type know quantities slack bus voltage magnitude and phase angle PQ bus real power injection and reactive power injection PV bus real power injection and voltage magnitude It is sufficient to model most of RDFs with PQ buses and one kind of edges, cables: One slack bus in RDF, corresponding to the root. Root not in any matrix. Ignore other delivery elements. "],["two-special-concepts.html", "2.2 Two Special Concepts", " 2.2 Two Special Concepts Essential for power flow calculation. 2.2.1 Channel observed active channels 2.2.2 Snapshot Snapshot is a concept to include power injections and voltages at one time index input: real power injections at all channels of PQ buses output: voltages, current flow, power flow Zero‐load snapshot is the snapshot where power injections at all the channels are zero and voltages equalt o rated voltages in corresponding phases. \\(\\boldsymbol{\\bar{V}}_\\text{zero}\\): voltages in zero‐load snapshot "],["case.html", "2.3 Case with 70 Buses", " 2.3 Case with 70 Buses Assumptions about feeders: arborescence step-down transformer is not considered three-phase four-wire cable one phase star connection A case with 70 buses is primarily used here: located in Belgium bus 1 is omitted Houses associated with buses 3, 7, 10, 13, 16, 20, 23, 26, 30, 33, 36, 39, 43, 46, 49, 52, 55, 58, 62, 65, 69 are connected through phase A. Houses associated with buses 5, 8, 11, 14, 18, 21, 24, 27, 31, 34, 37, 40, 44, 47, 50, 53, 56, 59, 63, 66, 70 are connected through phase B. "],["problem-formulation.html", "3 Problem Formulation ", " 3 Problem Formulation "],["directed-graph.html", "3.1 Directed Graph", " 3.1 Directed Graph weighted directed graph \\(G = (\\mathcal{N}, \\mathcal{E}, \\sigma, \\tau, \\omega)\\) set of nodes: \\(\\mathcal{N}\\) set of edges: \\(\\mathcal{E}\\) incidence functions: source \\(\\sigma\\), target \\(\\tau\\) (edge) weighting function, \\(\\omega: E \\rightarrow \\mathbb{R}\\). 2-D Euclidean Distance as Weight complete graph for a set of nodes all edges are potential edges some are impossible to exist association network inference cannot be used spanning arborescence subgraph of a directed graph root include every node (bus, in our case) feasible region Composed of all the spanning arborescences of the directed graph. Number of spanning arborescences is finite, making it a combinatorial optimisation problem. To count number of spanning arborescences. "],["ip-formulation.html", "3.2 IP Formulation", " 3.2 IP Formulation Symbols and definitions of sets: \\[ \\begin{array}{ll} \\hline \\textbf{symbol} &amp; \\textbf{definition} \\\\ \\hline \\mathcal{E} &amp; \\text{all the potential edges (edges in the complete graph)} \\\\ \\mathcal{C} &amp; \\text{available measurements of voltages and power injections} \\\\ \\mathcal{E}_\\text{impossible} &amp; \\text{potential edges that are impossible to exist} \\\\ \\hline \\end{array} \\] Symbols, definitions, types and sets of variables: \\[ \\begin{array}{llll} \\hline \\textbf{symbol} &amp; \\textbf{definition} &amp; \\textbf{type} &amp; \\textbf{set} \\\\ \\hline x_{i j} &amp; \\text{if edge from i to j is in the solution} &amp; \\{0, 1\\} &amp; \\mathcal{E} \\\\ \\hline \\end{array} \\] Symbols, definitions, sets of constants: \\[ \\begin{array}{lll} \\hline \\textbf{symbol} &amp; \\textbf{definition} &amp; \\textbf{set} \\\\ \\hline d_{i, j} &amp; \\text{weight of directed edge from i to j based on distance} &amp; \\mathcal{E} \\\\ \\hline \\end{array} \\] The integer programming formulation is: \\[ \\begin{aligned} \\min_{x_{i j} \\forall (i, j) \\in \\mathcal{E}} \\quad &amp; (1 - \\alpha) \\sum_{(i, j) \\in \\mathcal{E}} d_{i j} x_{i j} + \\alpha \\mathcal{H} \\left(\\{x_{i j} \\forall (i, j) \\in \\mathcal{E} \\}, \\mathcal{C} \\right) \\\\ \\text{s.t.} \\quad &amp; \\sum_{(i, j) \\in \\delta^{-}(j)} x_{i j} = 1 \\quad \\forall j \\in V^{\\prime} \\quad \\text{(a directed forest)} \\\\ &amp; \\sum_{(i, j) \\in \\delta^{-}(S)} x_{i j} \\geq 1 \\quad \\forall S \\subseteq V^{\\prime},|S| \\geq 2 \\quad \\text{(a connected graph)} \\\\ &amp; x_{i j} = 0 \\quad \\forall (i, j) \\in \\mathcal{E}_\\text{impossible} \\quad \\text{(remove impossible potential edges)} \\end{aligned} \\] Two terms in the objective function: \\[ \\begin{array}{lll} \\hline \\textbf{term} &amp; \\textbf{definition} &amp; \\textbf{coefficient} \\\\ \\hline (1 - \\alpha) \\sum_{(i, j) \\in \\mathcal{E}} d_{i j} x_{i j} &amp; \\text{weight of candidate arborescence} &amp; 1 - \\alpha \\\\ \\alpha \\mathcal{H} \\left(\\{x_{i j} \\forall (i, j) \\in \\mathcal{E} \\}, \\mathcal{C} \\right) &amp; \\text{assessment of candidate arborescence} &amp; \\alpha \\\\ \\hline \\end{array} \\] Three sets of constraints: First two sets ensure arborescence. Last set removes impossible potential edges. "],["combinatorial.html", "3.3 Combinatorial Optimisation", " 3.3 Combinatorial Optimisation At least two possible values for \\(\\alpha\\): \\[ \\begin{array}{llll} \\hline \\textbf{value} &amp; \\textbf{term lefted} &amp; \\textbf{to find} &amp; \\textbf{disadvantage} \\\\ \\hline 1 &amp; \\mathcal{H} \\left(\\{x_{i j} \\forall (i, j) \\in \\mathcal{E} \\}, \\mathcal{C} \\right) &amp; \\text{ground truth} &amp; \\text{NP-hard and non-linear} \\\\ 0 &amp; \\sum_{(i, j) \\in \\mathcal{E}} d_{i j} x_{i j} &amp; \\text{topology with min total cable length} &amp; \\text{cannot find ground truth} \\\\ \\hline \\end{array} \\] Such two situations can be visualised: In this project, local search heuristic algorithm is proposed to to move from \\(\\bigotimes\\) to \\(\\bigoplus\\): function what it does in this project objective assess candidate pseudo linearised power flow neighbourhood generate candidate rank spanning arborescence The starting point is found by minimum spanning arborescence Every candidate is reachable from the starting point. Ground truth should be found before long. Not in parallel. "],["AC.html", "4 AC Power Flow", " 4 AC Power Flow Discussion is based on one-line model. Can be generalised for multi-phase model. Model RDF with one bus impedance matrix. Model power flow using direct impedance method. Calculate power flow using fixed point method. "],["BIM.html", "4.1 Bus Impedance Matrix", " 4.1 Bus Impedance Matrix Bus impedance matrix (BIM), \\(\\boldsymbol{\\bar{Z}}\\), is defined as: \\[ \\begin{aligned} \\boldsymbol{\\bar{Z}} &amp;= \\boldsymbol{K}^{\\top} \\boldsymbol{\\bar{Z}}_\\text{edge} \\boldsymbol{K} \\\\ &amp;= \\boldsymbol{R} + j \\boldsymbol{X} \\end{aligned} \\] where: edge path incidence matrix (EPI), \\(\\boldsymbol{K}\\): current injection to current flow edge impedance diagonal block matrix (EIDB), \\(\\boldsymbol{\\bar{Z}}_\\text{edge}\\): voltage drop to voltage bus resistance matrix (BRM), \\(\\boldsymbol{R}\\): real part of entries in BIM Five steps to build BIM: Define a unit impedance matrix. Calculate edge impedance matrices for cables. Build EIDB. Obtain EPI based on topology. Calculate BIM using EIDB and EPI. "],["direct-impedance-method.html", "4.2 Direct Impedance Method", " 4.2 Direct Impedance Method Most proper model for power flow: \\[ \\begin{aligned} \\left[\\begin{array}{c} \\boldsymbol{\\bar{I}}_\\text{root} \\\\ \\boldsymbol{\\bar{I}} \\end{array}\\right] &amp;= \\left[\\begin{array}{cc} \\boldsymbol{\\bar{Y}}_{\\text{RR}} &amp; \\boldsymbol{\\bar{Y}}_{\\text{NR}}^{T} \\\\ \\boldsymbol{\\bar{Y}}_{\\text{NR}} &amp; \\boldsymbol{\\bar{Y}} \\end{array}\\right] \\left[\\begin{array}{c} \\boldsymbol{\\bar{V}}_\\text{rate} \\\\ \\boldsymbol{\\bar{V}} \\end{array}\\right] \\nonumber \\end{aligned} \\] where: admittance matrices: \\(\\boldsymbol{\\bar{Y}}\\), \\(\\boldsymbol{\\bar{Y}}_\\text{NR}\\), and \\(\\boldsymbol{\\bar{Y}}_\\text{RR}\\) current injection: \\(\\boldsymbol{\\bar{I}}\\), \\(\\boldsymbol{\\bar{I}}_\\text{root}\\) To get rid of variables that we are not interested in: \\[ \\begin{aligned} \\boldsymbol{\\bar{I}} &amp;= \\boldsymbol{\\bar{Y}} \\boldsymbol{\\bar{V}} + \\boldsymbol{\\bar{Y}}_\\text{NR} \\boldsymbol{\\bar{V}}_\\text{rate} \\nonumber \\end{aligned} \\] To use BIM: \\[ \\begin{aligned} \\boldsymbol{\\bar{V}} &amp;= \\boldsymbol{\\bar{Y}}^{-1} \\boldsymbol{\\bar{I}} - \\boldsymbol{\\bar{Y}}^{-1} \\boldsymbol{\\bar{Y}}_\\text{NR} \\boldsymbol{\\bar{V}}_\\text{rate} \\\\ &amp;= \\boldsymbol{\\bar{Z}} \\boldsymbol{\\bar{I}} + \\boldsymbol{\\bar{V}}_\\text{zero} \\end{aligned} \\] "],["fixed-point-method.html", "4.3 Fixed Point Method", " 4.3 Fixed Point Method To calculate power flow in one snapshot, given power injections, the following procedure is repeated: \\[ \\begin{aligned} \\boldsymbol{\\bar{I}} &amp;= \\boldsymbol{\\underline{P}} \\otimes \\boldsymbol{\\underline{V}}_\\text{previous} \\\\ \\boldsymbol{\\bar{V}} &amp;= \\boldsymbol{\\bar{Z}} \\boldsymbol{\\bar{I}} + \\boldsymbol{\\bar{V}}_\\text{zero} \\\\ \\epsilon &amp;= \\left( \\boldsymbol{\\bar{V}} - \\boldsymbol{\\bar{V}} \\right)^\\top \\left( \\boldsymbol{\\bar{V}} - \\boldsymbol{\\bar{V}} \\right) \\end{aligned} \\] until \\(\\epsilon\\) is smaller than a pre-defined threshold. "],["dc-power-flow.html", "5 DC Power Flow", " 5 DC Power Flow Three ways to calculated BRM: Real part of entries in BIM. Using EPI and ERDB. Lowest common ancestor problem. "],["linearised-power-flow.html", "5.1 Linearised Power Flow", " 5.1 Linearised Power Flow Voltage magnitude can be calculated using BRM and real power injections: \\[ \\begin{aligned} \\boldsymbol{V} &amp;= \\boldsymbol{V}_\\text{zero} + \\frac{1}{V_\\text{rate}} \\left( \\boldsymbol{K}^{\\top} \\boldsymbol{R}_\\text{edge} \\boldsymbol{K} \\right) \\boldsymbol{P} \\\\ {} &amp;= \\boldsymbol{V}_\\text{zero} + \\frac{1}{V_\\text{rate}} \\boldsymbol{R} \\boldsymbol{P} \\end{aligned} \\] "],["BRM.html", "5.2 Bus Resistance Matrix", " 5.2 Bus Resistance Matrix Step-down transformer is ignored, so bus 1 is not included. Bus 2 is the root. There are 69 PQ buses, and there are 207 channels. 207 rows and 207 columns. Lowest Common Ancestor Problem Entry \\((i, j)\\) is the sum of edge resistances in the common path to the root of bus \\(i\\) and \\(j\\). That is sum of edge resistances in the path from the root to the lowest common ancestor (LCA) of bus \\(i\\) and \\(j\\): \\[ R_{i, j}=\\sum_{k \\in U_{i} \\cap U_{j}} R_{\\text {edge }, k} \\] where \\(U_{i}\\) is set of edges on path from the root to bus \\(i\\). BRM can be calcualted efficiently using LCA for all pairs of buses. The pattern can be used in future work. For example, LCA of b3 and b5 is b2. Entry for b3, b5 is \\(R_\\text{e1} + R_\\text{e2}\\) LCA of b4 and b5 is still b2. Entry for b4, b5 is still \\(R_\\text{e1} + R_\\text{e2}\\). "],["assessment.html", "5.3 Assessment of Candidate", " 5.3 Assessment of Candidate Based on linearised power flow, \\(\\boldsymbol{V} = \\boldsymbol{V}_\\text{zero} + \\frac{1}{V_\\text{rate}} \\boldsymbol{R} \\boldsymbol{P}\\): \\[ \\begin{aligned} \\boldsymbol{P}_\\text{assess} = V_\\text{rate} \\boldsymbol{R}^{\\top} \\left( \\boldsymbol{V} - \\boldsymbol{V}_\\text{zero} \\right) \\end{aligned} \\] which is referred to as pseudo linearised power flow. The inversed BRM for case-70 looks like: Voltage magnitude at any channel can have a huge impact. Full observability over voltage magnitudes for now. The pattern can be used in future work. The second term in the objective function is: \\[ \\begin{aligned} \\mathcal{H}(\\boldsymbol{R}) = \\left[ (\\boldsymbol{P}_\\text{assess} - \\boldsymbol{P}) \\otimes \\boldsymbol{O} \\right]^\\top \\cdot \\left[ (\\boldsymbol{P}_\\text{assess} - \\boldsymbol{P}) \\otimes \\boldsymbol{O} \\right] / |\\mathcal{O}| \\end{aligned} \\] where \\(\\mathcal{O}\\): set of observed channels \\(\\boldsymbol{O}\\): binary vector indicating which observed active channels Entries for unobserved active channel are ignored. "],["VSM.html", "5.4 Voltage Sensitivity Matrix", " 5.4 Voltage Sensitivity Matrix "],["result-and-discussion.html", "6 Result and Discussion ", " 6 Result and Discussion "],["flowchart.html", "6.1 Flowchart", " 6.1 Flowchart "],["conclusion.html", "6.2 Conclusion", " 6.2 Conclusion All in all, there are four steps in the proposed framework for topology inference: Shrink feasible region (reduce the number of SAs) by removing overlapping edges. Measure the size of feasible region by counting number of SAs. Get candidates sequentially by ranking SAs according to total cable lengths. Assess candidates based on available measurements. "],["issues.html", "6.3 Issues", " 6.3 Issues Number of spanning arborescences. Matrices with full rank. Error in linearised power flow calculation. How to use VSM. "],["references.html", "References", " References "]]
