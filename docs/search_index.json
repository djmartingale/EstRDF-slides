[["index.html", "Topology Inference for Radial Distribution Feeder based on Power Flow 1 Introduction", " Topology Inference for Radial Distribution Feeder based on Power Flow Jie Xu (s181238) 2020-12-13 1 Introduction This website hosts slides for defence of my master graduation project in the Department of Electrical Engineering at Technical University of Denmark. How households are connected to distribution network is always unknown. A framework to infer such connections by utilising all kinds of information is proposed in this project. Problem Setting Available information and measurement: geographical information about buses voltage magnitudes of all the phases of all the buses some real power injection profiles Association network inference: Correlation between buses. \\(|\\mathcal{E}| = |\\mathcal{N}| - 1\\) Flowchart Two batches of computer programs: power flow three algorithms to handle directed graphs "],["radial-distribution-feeder.html", "2 Radial Distribution Feeder", " 2 Radial Distribution Feeder bus and edge two special concepts for power flow case with 70 buses "],["bus-edge.html", "2.1 Bus and Edge", " 2.1 Bus and Edge There are roughly two types of electrical devices in power grids. type definition examples edge transport power from one place to another cable, transformer, capacitor conversion element convert power from or to another form solar panel, battery bus where two delivery elements joint or end of a delivery element slack bus, PQ bus, PV bus Ignore conversion elements. Not necessary in power flow calculation. Cable. One slack bus -&gt; root. Impedance of cable is proportional to its length. Unit impedance matrix for case-70: \\[ \\begin{aligned} \\boldsymbol{\\bar{Z}}_{a b c} = \\left[\\begin{array}{lll} 0.000412+1.558e^{-4} j &amp; 0.000206+7.791e^{-5} j &amp; 0.000206+7.791e^{-5} j \\\\ 0.000206+7.791e^{-5} j &amp; 0.000412+1.558e^{-4} j &amp; 0.000206+7.791e^{-5} j \\\\ 0.000206+7.791e^{-5} j &amp; 0.000206+7.791e^{-5} j &amp; 0.000412+1.558e^{-4}j \\end{array}\\right] \\nonumber \\end{aligned} \\] "],["two-special-concepts.html", "2.2 Two Special Concepts", " 2.2 Two Special Concepts Essential for power flow calculation. Channel channel: refer to one phase in some bus active channel: there are non-zero injections (connected to some conversion element) observed active channel: such non-zero injections are known It is assumed that all active channels are known. Snapshot Snapshot is a concept to include power injections and voltages at one time index input: real power injections output: voltages, current flow, power flow Duration is 1 s in this project. Zero‐load snapshot is the snapshot where power injections at all the channels are zero and voltages equalt o rated voltages in corresponding phases. \\(\\boldsymbol{\\bar{V}}_\\text{zero}\\): voltages in zero‐load snapshot \\(V_\\text{rate}\\): rated voltage magnitude, 230 V "],["case.html", "2.3 Case with 70 Buses", " 2.3 Case with 70 Buses Assumptions about feeders: one path to any bus step-down transformer is not considered three-phase four-wire cable one phase star connection A case with 70 buses is primarily used here: located in Belgium bus 1 is omitted 70 buses 207 channels "],["problem-formulation.html", "3 Problem Formulation ", " 3 Problem Formulation "],["directed-graph.html", "3.1 Directed Graph", " 3.1 Directed Graph weighted directed graph \\(G = (\\mathcal{N}, \\mathcal{E}, \\sigma, \\tau, \\omega)\\) set of nodes: \\(\\mathcal{N}\\) set of edges: \\(\\mathcal{E}\\) incidence functions: source \\(\\sigma\\), target \\(\\tau\\) (edge) weighting function, \\(\\omega: E \\rightarrow \\mathbb{R}\\). 2-D Euclidean distance as weight association network inference cannot be used complete graph for a set of nodes all edges are potential edges some are impossible to exist spanning arborescence (SA) subgraph of a directed graph root include every bus feasible region All the SAs. Number of SA is finite, making it a combinatorial optimisation problem. Count number of SA. "],["overlapping.html", "3.2 Remove Overlapping Edge", " 3.2 Remove Overlapping Edge For example, in case-70: \\[ \\begin{array}{lllll} \\hline \\textbf{shortest path} &amp; &lt; &amp; \\textbf{direct edge} &amp; \\times \\textbf{threshold} &amp; \\text{-&gt; } \\textbf{remove direct edge} \\\\ \\hline \\text{&quot;b17‐b43-b29&quot;} &amp; &lt; &amp; \\text{&quot;b17-b29&quot;} &amp; \\times 1.1 &amp; \\text{-&gt; remove &quot;b17-b29&quot;} \\\\ \\text{&quot;b44‐b43-b29&quot;} &amp; &gt; &amp; \\text{&quot;b44-b29&quot;} &amp; \\times 1.1 &amp; \\text{-&gt; keep &quot;b44-b29&quot;} \\\\ \\hline \\end{array} \\] However: 446 possible potential edges over \\(10^{45}\\) spanning arborescences -&gt; summary "],["ip-formulation.html", "3.3 IP Formulation", " 3.3 IP Formulation Sets: \\[ \\begin{array}{ll} \\hline \\textbf{symbol} &amp; \\textbf{definition} \\\\ \\hline \\mathcal{E} &amp; \\text{all the potential edges (edges in the complete graph)} \\\\ \\mathcal{C} &amp; \\text{available measurements of voltages and power injections} \\\\ \\mathcal{E}_\\text{impossible} &amp; \\text{potential edges that are impossible to exist} \\\\ \\hline \\end{array} \\] Variables: \\[ \\begin{array}{llll} \\hline \\textbf{symbol} &amp; \\textbf{definition} &amp; \\textbf{type} &amp; \\textbf{set} \\\\ \\hline x_{i j} &amp; \\text{if edge from i to j is in the solution} &amp; \\{0, 1\\} &amp; \\mathcal{E} \\\\ \\hline \\end{array} \\] Constants: \\[ \\begin{array}{lll} \\hline \\textbf{symbol} &amp; \\textbf{definition} &amp; \\textbf{set} \\\\ \\hline d_{i, j} &amp; \\text{Euclidean distance from i to j} &amp; \\mathcal{E} \\\\ \\hline \\end{array} \\] Integer programming formulation: \\[ \\begin{aligned} \\min_{x_{i j} \\forall (i, j) \\in \\mathcal{E}} \\quad &amp; (1 - \\alpha) \\sum_{(i, j) \\in \\mathcal{E}} d_{i j} x_{i j} + \\alpha \\mathcal{H} \\left(\\{x_{i j} \\forall (i, j) \\in \\mathcal{E} \\}, \\mathcal{C} \\right) \\\\ \\text{s.t.} \\quad &amp; \\sum_{(i, j) \\in \\delta^{-}(j)} x_{i j} = 1 \\quad \\forall j \\in V^{\\prime} \\quad \\text{(a directed forest)} \\\\ &amp; \\sum_{(i, j) \\in \\delta^{-}(S)} x_{i j} \\geq 1 \\quad \\forall S \\subseteq V^{\\prime},|S| \\geq 2 \\quad \\text{(a connected graph)} \\\\ &amp; x_{i j} = 0 \\quad \\forall (i, j) \\in \\mathcal{E}_\\text{impossible} \\quad \\text{(remove impossible potential edges)} \\end{aligned} \\] Two terms in the objective function: \\[ \\begin{array}{lll} \\hline \\textbf{term} &amp; \\textbf{definition} &amp; \\textbf{coefficient} \\\\ \\hline (1 - \\alpha) \\sum_{(i, j) \\in \\mathcal{E}} d_{i j} x_{i j} &amp; \\text{weight of candidate arborescence} &amp; 1 - \\alpha \\\\ \\alpha \\mathcal{H} \\left(\\{x_{i j} \\forall (i, j) \\in \\mathcal{E} \\}, \\mathcal{C} \\right) &amp; \\text{assessment of candidate arborescence} &amp; \\alpha \\\\ \\hline \\end{array} \\] Three sets of constraints: First two sets ensure arborescence. Last set removes impossible potential edges. "],["combinatorial.html", "3.4 Combinatorial Optimisation", " 3.4 Combinatorial Optimisation At least two possible values for \\(\\alpha\\): \\[ \\begin{array}{llll} \\hline \\textbf{value} &amp; \\textbf{term lefted} &amp; \\textbf{to find} &amp; \\textbf{disadvantage} \\\\ \\hline 1 &amp; \\mathcal{H} \\left(\\{x_{i j} \\forall (i, j) \\in \\mathcal{E} \\}, \\mathcal{C} \\right) &amp; \\text{ground truth} &amp; \\text{NP-hard and non-linear} \\\\ 0 &amp; \\sum_{(i, j) \\in \\mathcal{E}} d_{i j} x_{i j} &amp; \\text{topology with min total cable length} &amp; \\text{cannot find ground truth} \\\\ \\hline \\end{array} \\] Such two situations can be visualised: A local search heuristic algorithm is proposed to to move from \\(\\bigotimes\\) to \\(\\bigoplus\\): function what it does in this project objective assess candidate pseudo linearised power flow neighbourhood generate candidate rank spanning arborescence The starting point is found by minimum spanning arborescence Every candidate is reachable from the starting point. Ground truth should be found before long. Not in parallel. "],["ac-power-flow.html", "4 AC Power Flow", " 4 AC Power Flow Discussion is based on one-line model. Can be generalised for multi-phase model. Model RDF with one bus impedance matrix. Calculate power flow using fixed point method. "],["two-matrices.html", "4.1 Two Matrices", " 4.1 Two Matrices Current injection to flow: \\[ \\bar{\\boldsymbol{I}}_{\\text{edge}} = - \\boldsymbol{K} \\bar{\\boldsymbol{I}} \\] where edge path incidence matrix (EPI), \\(\\boldsymbol{K}\\). Voltage drop to nodal voltage: \\[ \\bar{\\boldsymbol{V}} = \\bar{\\boldsymbol{V}}_{\\text{zero}} - \\boldsymbol{K}^{\\top} \\boldsymbol{\\bar{Z}}_\\text{edge} \\bar{\\boldsymbol{I}}_{\\text{edge}} \\] where edge impedance diagonal block matrix (EIDB), \\(\\boldsymbol{\\bar{Z}}_\\text{edge}\\). \\[ \\begin{aligned} \\left[\\begin{array}{l} \\bar{I}_{\\text{edge}, 1} \\\\ \\bar{I}_{\\text{edge}, 2} \\\\ \\bar{I}_{\\text{edge}, 3} \\\\ \\bar{I}_{\\text{edge}, 4} \\\\ \\bar{I}_{\\text{edge}, 5} \\end{array}\\right] = - \\left[\\begin{array}{lllll} 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 0 &amp; 1 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\left[\\begin{array}{l} \\bar{I}_{1} \\\\ \\bar{I}_{2} \\\\ \\bar{I}_{3} \\\\ \\bar{I}_{4} \\\\ \\bar{I}_{5} \\end{array}\\right] \\end{aligned} \\] \\[ \\begin{aligned} &amp; \\left[\\begin{array}{c} \\bar{V}_{1} \\\\ \\bar{V}_{2} \\\\ \\bar{V}_{3} \\\\ \\bar{V}_{4} \\\\ \\bar{V}_{5} \\end{array}\\right] - \\left[\\begin{array}{c} \\bar{V}_\\text{rate} \\\\ \\bar{V}_\\text{rate} \\\\ \\bar{V}_\\text{rate} \\\\ \\bar{V}_\\text{rate} \\\\ \\bar{V}_\\text{rate} \\end{array}\\right] = - \\left[\\begin{array}{ccccc} 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\\\ 0 &amp; 0 &amp; 1 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\end{array} \\right]^{\\top} \\left[\\begin{array}{ccccc} Z_{\\text{edge}, 1} &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; Z_{\\text{edge}, 2} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; Z_{\\text{edge}, 3} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; Z_{\\text{edge}, 4} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; Z_{\\text{edge}, 5} \\end{array}\\right] \\left[\\begin{array}{l} \\bar{I}_{\\text{edge}, 1} \\\\ \\bar{I}_{\\text{edge}, 2} \\\\ \\bar{I}_{\\text{edge}, 3} \\\\ \\bar{I}_{\\text{edge}, 4} \\\\ \\bar{I}_{\\text{edge}, 5} \\end{array} \\right] \\end{aligned} \\] Alternating current power flow: \\[ \\bar{\\boldsymbol{V}} = \\bar{\\boldsymbol{V}}_{\\text{zero}} + \\left( \\boldsymbol{K}^{\\top} \\boldsymbol{\\bar{Z}}_\\text{edge} \\boldsymbol{K} \\right) \\bar{\\boldsymbol{I}} \\] "],["BIM.html", "4.2 Bus Impedance Matrix", " 4.2 Bus Impedance Matrix Alternating current power flow: \\[ \\bar{\\boldsymbol{V}} = \\bar{\\boldsymbol{V}}_{\\text{zero}} + \\left( \\boldsymbol{K}^{\\top} \\boldsymbol{\\bar{Z}}_\\text{edge} \\boldsymbol{K} \\right) \\bar{\\boldsymbol{I}} \\] Bus impedance matrix (BIM), \\(\\boldsymbol{\\bar{Z}}\\), is defined as: \\[ \\begin{aligned} \\boldsymbol{\\bar{Z}} &amp;= \\boldsymbol{K}^{\\top} \\boldsymbol{\\bar{Z}}_\\text{edge} \\boldsymbol{K} \\\\ &amp;= \\boldsymbol{R} + j \\boldsymbol{X} \\end{aligned} \\] where bus resistance matrix (BRM), \\(\\boldsymbol{R}\\): real part of entries in BIM. "],["direct-impedance-method.html", "4.3 Direct Impedance Method", " 4.3 Direct Impedance Method Five steps to build BIM: Define a unit impedance matrix. Calculate edge impedance matrices for cables. Build EIDB. Obtain EPI based on topology. Calculate BIM using EIDB and EPI. Fixed Point Method To calculate power flow in one snapshot, given power injections, the following procedure is repeated: \\[ \\begin{aligned} \\boldsymbol{\\bar{I}} &amp;= \\boldsymbol{\\underline{P}} \\otimes \\boldsymbol{\\underline{V}}_\\text{previous} \\\\ \\boldsymbol{\\bar{V}} &amp;= \\boldsymbol{\\bar{Z}} \\boldsymbol{\\bar{I}} + \\boldsymbol{\\bar{V}}_\\text{zero} \\\\ \\epsilon &amp;= \\left( \\boldsymbol{\\bar{V}} - \\boldsymbol{\\bar{V}} \\right)^\\top \\left( \\boldsymbol{\\bar{V}} - \\boldsymbol{\\bar{V}} \\right) \\end{aligned} \\] until \\(\\epsilon\\) is smaller than a pre-defined threshold. "],["linearised-power-flow.html", "5 Linearised Power Flow", " 5 Linearised Power Flow Three ways to calculated BRM: Real part of entries in BIM. Using EPI and ERDB. Lowest common ancestor problem. "],["linearVoltageDrop.html", "5.1 Linearised Voltage Drop", " 5.1 Linearised Voltage Drop With power flow at source of edge \\(k\\), \\(\\bar{S}_{\\text{source}, k}\\): \\[ \\bar{I}_{\\text{edge}, k} = \\frac{\\underline{S}_{\\text{source}, k}}{\\underline{V}_i} \\\\ \\] Voltage drop: \\[ \\begin{aligned} \\bar{V}_{\\text{edge}, k} &amp;= \\bar{I}_{\\text{edge}, k} \\bar{Z}_{\\text{edge}, k} \\\\ &amp;= \\frac{ \\underline{S}_{\\text{source}, k} \\bar{Z}_{\\text{edge}, k} }{\\underline{V}_i} \\\\ &amp;= \\frac{ \\left(P_{\\text{source}, k} - j Q_{\\text{source}, k} \\right) \\left(R_{\\text{edge}, k} + j X_{\\text{edge}, k} \\right) }{\\underline{V}_i} \\\\ &amp;= \\frac{ R_{\\text{edge}, k} P_{\\text{source}, k} + X_{\\text{edge}, k} Q_{\\text{source}, k} }{\\underline{V}_i} + j \\frac{ X_{\\text{edge}, k} P_{\\text{source}, k} - R_{\\text{edge}, k} Q_{\\text{source}, k} }{\\underline{V}_i} \\end{aligned} \\] Then: \\[ V_{\\text{edge}, k} = \\frac{R_{\\text{edge}, k}}{V_\\text{rate}} P_{\\text{source}, k} \\] Ignore imaginary part. Replace \\(\\underline{V}_i\\) with \\(V_\\text{rate}\\). "],["linearised-voltage.html", "5.2 Linearised Voltage", " 5.2 Linearised Voltage Voltage drop to nodal voltage: \\[ \\boldsymbol{V} = \\boldsymbol{V}_\\text{zero} - \\frac{1}{V_\\text{rate}} \\boldsymbol{K}^{\\top} \\boldsymbol{R}_\\text{edge} \\boldsymbol{P}_\\text{source} \\] Power injection to flow: \\[ \\boldsymbol{P}_\\text{source} = - \\boldsymbol{K} \\left(\\boldsymbol{P} - \\boldsymbol{P}_\\text{loss} \\right) \\] Voltage magnitude can be calculated using BRM and real power injections: \\[ \\begin{aligned} \\boldsymbol{V} &amp;= \\boldsymbol{V}_\\text{zero} + \\frac{1}{V_\\text{rate}} \\left( \\boldsymbol{K}^{\\top} \\boldsymbol{R}_\\text{edge} \\boldsymbol{K} \\right) \\boldsymbol{P} \\\\ {} &amp;= \\boldsymbol{V}_\\text{zero} + \\frac{1}{V_\\text{rate}} \\boldsymbol{R} \\boldsymbol{P} \\end{aligned} \\] To assess candidate by calculating power injection using voltage magnitudes. "],["BRM.html", "5.3 Bus Resistance Matrix", " 5.3 Bus Resistance Matrix Step-down transformer is ignored, so bus 1 is not included. Bus 2 is the root. There are 69 PQ buses, and there are 207 channels. 207 rows and 207 columns. Lowest Common Ancestor Problem Entry \\((i, j)\\) is the sum of edge resistances in the common path to the root of bus \\(i\\) and \\(j\\). That is sum of edge resistances in the path from the root to the lowest common ancestor (LCA) of bus \\(i\\) and \\(j\\): \\[ R_{i, j}=\\sum_{k \\in U_{i} \\cap U_{j}} R_{\\text {edge }, k} \\] where \\(U_{i}\\) is set of edges on path from the root to bus \\(i\\). BRM can be calcualted efficiently using LCA for all pairs of buses. The pattern can be used in future work. For example, LCA of b3 and b5 is b2. Entry for b3, b5 is \\(R_\\text{e1} + R_\\text{e2}\\) LCA of b4 and b5 is still b2. Entry for b4, b5 is still \\(R_\\text{e1} + R_\\text{e2}\\). -&gt; summary "],["pseudo-linearised-power-flow.html", "5.4 Pseudo Linearised Power Flow", " 5.4 Pseudo Linearised Power Flow Based on linearised power flow, \\(\\boldsymbol{V} = \\boldsymbol{V}_\\text{zero} + \\frac{1}{V_\\text{rate}} \\boldsymbol{R} \\boldsymbol{P}\\): \\[ \\begin{aligned} \\boldsymbol{P}_\\text{assess} = V_\\text{rate} \\boldsymbol{R}^{\\top} \\left( \\boldsymbol{V} - \\boldsymbol{V}_\\text{zero} \\right) \\end{aligned} \\] which is referred to as pseudo linearised power flow. The inversed BRM for case-70 looks like: Voltage magnitude at any channel can have a huge impact. The pattern can be used in future work. "],["assessment.html", "5.5 Assessment of Candidate", " 5.5 Assessment of Candidate Calculate \\(\\boldsymbol{P}_\\text{assess}\\) using voltage magnitudes. The second term in the objective function is: \\[ \\begin{aligned} \\mathcal{H}(\\boldsymbol{R}) = \\left[ (\\boldsymbol{P}_\\text{assess} - \\boldsymbol{P}) \\otimes \\boldsymbol{O} \\right]^\\top \\cdot \\left[ (\\boldsymbol{P}_\\text{assess} - \\boldsymbol{P}) \\otimes \\boldsymbol{O} \\right] / |\\mathcal{O}| \\end{aligned} \\] where: \\(\\mathcal{O}\\): set of observed active channels and inactive channels \\(\\boldsymbol{O}\\): binary vector indicating observed active channels Entries for unobserved active channels are ignored. "],["error.html", "5.6 Error from Linearisation", " 5.6 Error from Linearisation Box plot: with respect to different number of observed active channels based on ground truth and 50 snapshots1 Error is aleady reduced to 1.7 ~ 2.2. Rated voltage magnitudes will increase the error dramatically. Full observability over voltage magnitudes for now. -&gt; summary during 00:00:00 and 00:00:50 on Dec 2, 2020 from Sonnen data set.↩︎ "],["result-and-discussion.html", "6 Result and Discussion ", " 6 Result and Discussion "],["result-for-case-70.html", "6.1 Result for Case-70", " 6.1 Result for Case-70 Rank SA: Assessment results: "],["summary.html", "6.2 Summary", " 6.2 Summary Topology inference -&gt; combinatorial optimisation problem. A framework is proposed. Core: local search heuristic algorithm. Advantages: Robust to partial observability. Integrate all kinds of information in weight and direction. Four steps: Shrink feasible region (reduce the number of SAs) by removing overlapping edges. Measure the size of feasible region by counting number of SAs. Get candidates sequentially by ranking SAs according to total cable lengths. Assess candidates based on available measurements. Issues Too many spanning arborescences. (remove overlapping edges) Full observability over voltage magnitudes. (matrices with full rank) Error in linearised power flow calculation. (error from linearisation) Future Work How to detect more impossible potential edges. (for issue 1) How to assess candidates based on a fraction. (for issue 2) How to use voltage sensitivity matrix in linearised power flow. (for issue 3) "],["references.html", "References", " References "]]
